- name: Docker build intermediary image
  uses: jsmrcaga/action-docker-build-dependencies@v0.0.1

jobs:
	build_my_docker_image:
		- name: Build docker image and dependencies
		  id: deps
		  uses: jsmrcaga/action-docker-build-dependencies
		  with:
		  	dockerfile_path: '.'
		  	docker_username: ${{ secrets.DOCKER_USERNAME }}
		  	docker_password: ${{ secrets.DOCKER_PASSWORD }}
		  	docker_registry: ghcr.io

		  	# Allow the action to read and compute intermediary hash from given hash and Dockerfile
		  	# Very useful if you change the "dependency" part of your Dockerfile
		  	compute_dockerfile_hash: true
		  	intermediary_hash: hash-of-my-dependencies
		  	intermediary_image_as: my-image

		  	# Url WITHOUT tag. The tag is the computed hash
		  	intermediary_image_url: https://ghcr.io/OWNER/my_intermediary_image
		  	intermediary_build_flags: --build-arg NODE_ENV="development"

		  	# Pushes the intermediary image in after your workflow runs
		  	should_push_intermediary_image: true

		- name: Build final image
		  run: DOCKER_BUILDKIT=1 docker build -t my_image:my_tag --build-arg BASE_IMAGE=${{ steps.deps.outputs.intermediary_tag }} .
      
 	docker build 
		--pull
		--no-cache
		--target ${ inputs.intermediary_image_as }
		-t ${ inputs.intermediary_image_url }:${final_hash}
		${ inputs.intermediary_build_flags  }
		${ inputs.dockerfile_path }
    
  on:
	release:
		types: [published]

jobs:
	build_my_docker_image:
		runs-on: ubuntu-latest

		- name: Hash dependency files
		  id: deps_hash
		  echo: "::set-output name=dependency_hash::${{ hashFiles('package.json', 'package-lock.json') }}"

		- name: Build docker image and dependencies
		  uses: jsmrcaga/action-docker-build-dependencies
		  with:
			docker_username: ${{ secrets.DOCKER_USERNAME }}
			docker_password: ${{ secrets.DOCKER_PASSWORD }}
			docker_registry: ghcr.io

			intermediary_hash: ${{ steps.deps_hash.outputs.dependency_hash }}
			intermediary_image_as: intermediary_image_as_in_dockerfile

			# Note that your image name can be whatever you want (after my_username)
			intermediary_image_url: https://ghcr.io/my_username/my_image_name
			intermediary_build_flags: --build-arg NODE_ENV="development"
      
 # Automatic hash will begin here

ARG base_image=intermediary_image_as_in_dockerfile

# This is the name of the intermediary image you need to set on the workflow config
FROM node as intermediary_image_as_in_dockerfile

COPY ./package.json /myapp
COPY ./package-lock.json /myapp

npm i

# Automatic hash will end here

# Note the $base_image is the arg name
FROM $base_image

COPY . /myapp

CMD run my app

name: Docker build intermediary image
description: Build an intermediary dependency image for your Docker image

author: Jo Colina

branding:
  color: blue
  icon: box

inputs:
  dockerfile_path:
    required: false
    default: './'
    description: 'The location of your Dockerfile, default is `./`. If hashing dockerfile the name "Dockerfile" will be appended to read the file'

  docker_username:
    required: true

  docker_password:
    required: true

  docker_registry:
    required: false
    default: ''
    description: 'The registry to login to. Default is blank for DockerHub, for GitHub use ghcr.io'

  compute_dockerfile_hash:
    required: false
    description: 'If this action reads and computes a hash of the first part of your dockerfile'
    default: false

  intermediary_hash:
    required: true
    description: 'A hash used as a tag for your intermediary image. Creating a new image will also depend on this hash'

  intermediary_image_as:
    required: true
    description: 'The alias of the image as specified on your Dockerfile `as xxxx`'

  intermediary_image_url:
    required: true
    description: 'The URL to where to publish your image, format is everything except the image version'

  intermediary_build_flags:
    required: false
    description: 'Any extra build flags you would like to append to the `docker build` command'
    default: ''

  should_push_intermediary_image:
    required: false
    description: 'If the action should push the intermediary image at the end of your workflow run'
    default: true


outputs:
  intermediary_tag:
    description: The intermediary image full url (with tag). You can use this to build your main image

runs:
  using: 'node16'

  pre: 'scripts/pre.js'
  
  main: 'scripts/main.js'
  
  post: 'scripts/post.js'
  post-if: success()
  
  
