- name: Update your package.json with an npm pre-release version, and update dependencies with pre-release versions
  uses: adobe/update-prerelease-npm-version@v1.0.2

steps:
- name: Update your package.json with an npm pre-release version
  id: pre-release-version
  uses: adobe/update-prerelease-npm-version@v1.0.0
  with:
    # if not specified, use the default "pre" (optional)
    pre-release-tag: 'mytag' 
    # if not specified, use the default "package.json" (optional)
    package-json-path: 'some/path/package.json'
    # if specified, it will find the dependencies in package.json and update with the dependencies-to-update-version-tag
    dependencies-to-update: semver,to-camel-case
    # the version tag to update the dependencies-to-update list with
    dependencies-to-update-version-tag: next
    # the package name to publish to (optional)
    package-name: @adobe/my-cli-next

# your package.json version should be transformed after the previous step
- run: cat package.json
# access the pre-release version output. output variable is "pre-release-version"
- run: echo ${{ steps.pre-release-version.outputs.pre-release-version }} 
# then you publish your package with this pre-release version, under a tag (say 'next' here)
- run: npm publish --tag next

# Copyright 2022 Adobe. All rights reserved.
# This file is licensed to you under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
# OF ANY KIND, either express or implied. See the License for the specific language
# governing permissions and limitations under the License.

name: 'Update your package.json with an npm pre-release version, and update dependencies with pre-release versions'
description: 'Modifies your package.json with a pre-release version in the form X.Y.Z-pre.YYYMMDD.<commitShaHash>'
branding:
  icon: 'box'  
  color: 'red'
inputs:
  pre-release-tag:
    description: 'the pre-release tag to set'
    required: false
    default: 'pre'
  package-json-path:
    description: 'the package.json file'
    required: false
    default: 'package.json'
  dependencies-to-update:
    description: 'the dependencies to update with a version tag (comma separated)'
    required: false
    default: ''
  dependencies-to-update-version-tag:
    description: 'the version tag for the dependencies to update'
    required: false
    default: 'next'
  package-name:
    description: 'the new package name to publish to'
    required: false

outputs:
  pre-release-version:
    description: 'the pre-release version that was set'
runs:
  using: 'node16'
  main: 'dist/index.js'
  
  
