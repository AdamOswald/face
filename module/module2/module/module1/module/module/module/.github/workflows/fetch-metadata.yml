- name: Fetch Metadata from Dependabot PRs
  uses: dependabot/fetch-metadata@v1.3.4

-- .github/workflows/dependabot-prs.yml
name: Dependabot Pull Request
on: pull_request_target
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch Dependabot metadata
      id: dependabot-metadata
      uses: dependabot/fetch-metadata@v1
      with:
        alert-lookup: true
        compat-lookup: true
        github-token: "${{ secrets.PAT_TOKEN }}"
        
        name: Dependabot auto-approve
on: pull_request_target
permissions:
  pull-requests: write
jobs:
  dependabot:
    runs-on: ubuntu-latest
    # Checking the author will prevent your Action run failing on non-Dependabot PRs
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1
      - uses: actions/checkout@v3
      - name: Approve a PR if not already approved
        run: |
          gh pr checkout "$PR_URL" # sets the upstream metadata for `gh pr status`
          if [ "$(gh pr status --json reviewDecision -q .currentBranch.reviewDecision)" != "APPROVED" ];
          then gh pr review --approve "$PR_URL"
          else echo "PR already approved, skipping additional approvals to minimize emails/notification noise.";
          fi
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
          name: Dependabot auto-merge
on: pull_request_target
permissions:
  pull-requests: write
  contents: write
jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1
      - name: Enable auto-merge for Dependabot PRs
        if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'rails') && steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch'}}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
          name: Dependabot auto-label
on: pull_request_target
permissions:
  pull-requests: write
  issues: write
  repository-projects: write
jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1
      - name: Add a label for all production dependencies
        if: ${{ steps.dependabot-metadata.outputs.dependency-type == 'direct:production' }}
        run: gh pr edit "$PR_URL" --add-label "production"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
          name: 'Fetch Metadata from Dependabot PRs'
description: 'Extract information from about the dependency being updated by a Dependabot-generated PR'
branding:
  icon: 'search'
  color: 'blue'
inputs:
  alert-lookup:
    type: boolean
    description: 'If true, then populate the `alert-state`, `ghsa-id` and `cvss` outputs'
  compat-lookup:
    type: boolean
    description: 'If true, then populate the `compatibility-score` output'
  github-token:
    description: 'The GITHUB_TOKEN secret'
    default: ${{ github.token }}
  skip-commit-verification:
    type: boolean
    description: 'If true, the action will not expect Dependabot commits to be verified. This should be set as `true` in GHES environments.'
    default: false
outputs:
  dependency-names:
    description: 'A comma-separated list of all package names updated.'
  dependency-type:
    description: 'The type of dependency has determined this PR to be, e.g. "direct:production".'
  update-type:
    description: 'The highest semver change being made by this PR, e.g. "version-update:semver-major"'
  updated-dependencies-json:
    description: 'A JSON string containing the full information about each updated Dependency.'
  directory:
    description: 'The `directory` configuration that was used by dependabot for this updated Dependency.'
  package-ecosystem:
    description: 'The `package-ecosystem` configuration that was used by dependabot for this updated Dependency.'
  target-branch:
    description: 'The `target-branch` configuration that was used by dependabot for this updated Dependency.'
  previous-version:
    description: 'The version that this PR updates the dependency from.'
  new-version:
    description: 'The version that this PR updates the dependency to.'
  alert-state:
    description: 'If this PR is associated with a security alert and `alert-lookup` is `true`, this contains the current state of that alert (OPEN, FIXED or DISMISSED).'
  ghsa-id:
    description: 'If this PR is associated with a security alert and `alert-lookup` is `true`, this contains the GHSA-ID of that alert.'
  cvss:
    description: 'If this PR is associated with a security alert and `alert-lookup` is `true`, this contains the CVSS value of that alert (otherwise it contains 0).'
  compatibility-score:
    description: 'If this PR has a known compatibility score and `compat-lookup` is `true`, this contains the compatibility score (otherwise it contains 0).'
runs:
  using: 'node16'
  main: 'dist/index.js'
  
  
