- name: Format GDScript Code
  uses: quantum-defence/gdformatter@v0.1.5

name: 'Format GDScript Code'
description: 'Creates a pull request with automated code formatting for GDscript.'
inputs:
  token:
    description: 'GITHUB_TOKEN or a `repo` scoped Personal Access Token (PAT)'
    default: ${{ github.token }}
  path:
    description: >
      Relative path under $GITHUB_WORKSPACE to the repository.
      Defaults to $GITHUB_WORKSPACE.
  commit-message:
    description: 'The message to use when committing changes.'
    default: 'Auto format GDScript code.'
  committer:
    description: >
      The committer name and email address in the format `Display Name <email@address.com>`.
      Defaults to the GitHub Actions bot user.
    default: 'GitHub <noreply@github.com>'
  author:
    description: >
      The author name and email address in the format `Display Name <email@address.com>`.
      Defaults to the user who triggered the workflow run.
    default: 'GitHub <noreply@github.com>'
  branch:
    description: 'The pull request branch name.'
    default: 'gdformatter_'
  branch-suffix:
    description: 'The branch suffix type when using the alternative branching strategy.'
    default: 'short-commit-hash'
  delete-branch:
    description: 'Delete the `branch` when closing pull requests, and when undeleted after merging.'
    default: true
  labels:
    description: 'A comma or newline separated list of labels.'
  assignees:
    description: 'A comma or newline separated list of assignees (GitHub usernames).'
  reviewers:
    description: 'A comma or newline separated list of reviewers (GitHub usernames) to request a review from.'
  team-reviewers:
    description: >
      A comma or newline separated list of GitHub teams to request a review from.
      Note that a `repo` scoped Personal Access Token (PAT) may be required.
  draft:
    description: 'Create a draft pull request'
    default: false

runs:
  using: "composite"
  steps:
    - name: checkout repo content
      uses: actions/checkout@v2

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7.7'

    - name: install python packages
      run: |
        python -m pip install --upgrade pip
        python -m pip install gdtoolkit
      shell: bash

    # for all .gd files, run `gdformat filepath` in bash
    - name: execute gdformat
      run: find . -name "*.gd" -exec sh -c 'gdformat "$0"' {} \; 
      shell: bash

    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ github.event.inputs.token }}
        path: ${{ github.event.inputs.path }}
        commit-message: ${{ github.event.inputs.commit-message }}
        committer: ${{ github.events.inputs.committer }}
        author: ${{ github.events.inputs.author }}
        branch: ${{ github.events.inputs.branch }}
        branch-suffix: ${{ github.events.inputs.branch-suffix }}
        delete-branch: ${{ github.events.inputs.delete-branch }}
        title: 'Changes by gdformatter action.'
        body: 'Automated changes by [gdformatter](https://github.com/quantum-defence/gdformatter) GitHub action'
        labels: ${{ github.events.inputs.labels }}
        assignees: ${{ github.events.inputs.assignees }}
        reviewers: ${{ github.events.inputs.reviewers }}
        team-reviewers: ${{ github.events.inputs.team-reviewers }}
        draft: ${{ github.events.inputs.draft }}

    - name: Check outputs
      run: |
        echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
        echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
      shell: bash

branding:
  icon: 'code'  
  color: 'green'
