- name: Setup Java
  uses: Fleshgrinder/setup-java@1.0.0

jobs:
  example:
    runs-on: ubuntu-latest # All OS are supported!
    steps:
    - uses: actions/checkout@main        # replace @main with desired version
    - uses: fleshgrinder/setup-java@main # replace @main with desired version
    - run: java -version                 # ðŸŽ‰
    
    name: Setup Java
description: Automatic Java Setup
author: Fleshgrinder
branding:
  color: black
  icon: terminal

inputs:
  # If not set defaults to `$JAVA_DEFAULT_VERSION`, if this does not exist it
  # falls back to the value read from the `version-filename`.
  version:
    description: Specifies a version to use instead of reading it from a file, useful in matrix builds.
    required: false
  # If not set defaults to `$JAVA_DEFAULT_VERSION_FILENAME`, if this does not
  # exist it falls back to `.java-version`.
  version-filename:
    description: Specifies the name to the file where the version should be read from.
    required: false
  # If not set defaults to `$JAVA_DEFAULT_DISTRIBUTION`, if this does not exist
  # it falls back to `temurin`.
  distribution:
    description: Specifies the Java distribution (temurin, zulu, adopt, adopt-hotspot, adopt-openj9, liberica, microsoft, or corretto).
    required: false
  # If not set this defaults to `$JAVA_DEFAULT_ARCHITECTURE`, if this does not
  # exist it falls back to mapping the `$RUNNER_ARCH`.
  architecture:
    description: Specifies the Java architecture (x86, x64, armv7, aarch64, or ppc64le).
    required: false
  # If not set this defaults to `$JAVA_DEFAULT_PACKAGE_TYPE`, if this does not
  # exist it falls back to `jdk`.
  package-type:
    description: Specifies the Java package type (jdk, jre, jdk+fx, or jre+fx).
    required: false
  # If not set this defaults to `$JAVA_DEFAULT_CHECK_LATEST`, if this does not
  # exist it falls back to `false`.
  check-latest:
    description: Specifies if the latest available version should be resolved on each run, or not.
    required: false

outputs:
  version:
    description: Actual version of Java that has been set up.
    value: ${{ steps.setup.outputs.version }}
  distribution:
    description: Identifier of the distribution that has been set up.
    value: ${{ steps.setup.outputs.distribution }}
  path:
    description: Path where Java has been set up (same as `$JAVA_HOME`).
    value: ${{ steps.setup.outputs.path }}
  cache-hit:
    description: Boolean indicating if a match was found in the cache.
    value: ${{ steps.setup.outputs.cache-hit }}

runs:
  using: composite
  steps:
  - name: Resolve Java Architecture
    id: arch
    if: ${{ inputs.architecture == '' && env.JAVA_DEFAULT_ARCHITECTURE == '' }}
    shell: bash
    run: exec '${{ github.action_path }}src/resolve_arch.py'

  - name: Resolve Java Version
    id: version
    env:
      INPUT_VERSION: ${{ inputs.version }}
      INPUT_VERSION_FILENAME: ${{ inputs.version-filename }}
    shell: bash
    run: exec '${{ github.action_path }}src/resolve_version.py'

  - name: Setup Java
    id: setup
    uses: actions/setup-java@v3
    with:
      architecture: ${{ inputs.architecture || env.JAVA_DEFAULT_ARCHITECTURE || steps.arch.outputs.value }}
      check-latest: ${{ inputs.check-latest || env.JAVA_DEFAULT_CHECK_LATEST || 'false' }}
      distribution: ${{ inputs.distribution || env.JAVA_DEFAULT_DISTRIBUTION || 'temurin' }}
      java-package: ${{ inputs.package || env.JAVA_DEFAULT_PACKAGE_TYPE || 'jdk' }}
      java-version: ${{ env.JAVA_VERSION }}
      
      
